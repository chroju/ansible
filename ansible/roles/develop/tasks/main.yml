- name: install via yum
  yum: name="{{ item }}" state=latest
  with_items:
    - "@Development tools"
    - zsh
    - git
    - vim
    - jq
    - tar
    - gcc
    - openssl-devel
    - libyaml-devel
    - libffi-devel
    - readline-devel
    - zlib-devel
    - gdbm-devel
    - ncurses-devel
  become: yes

- name: install via yum epel
  yum: name="{{ item }}" state=latest enablerepo=epel
  with_items:
    - docker-io
  become: yes

- name: docker enabled
  service: name=docker enabled=yes state=started
  become: yes

- name: git clone repos
  git: repo={{ item.repo }} dest={{ item.dest }} accept_hostkey=yes
  with_items:
    - { repo: "https://github.com/chroju/dotfiles", dest: "/home/{{ wheel_user_name }}/dotfiles" }
    - { repo: "https://github.com/sstephenson/rbenv", dest: "/home/{{ wheel_user_name }}/.rbenv" }
    - { repo: "https://github.com/sstephenson/ruby-build", dest: "/home/{{ wheel_user_name }}/.rbenv/plugins/ruby-build" }

- name: install ruby-build
  shell: sh /home/{{ wheel_user_name }}/.rbenv/plugins/ruby-build/install.sh
  become: yes

- name: set dotfiles
  shell: sh /home/{{ wheel_user_name }}/dotfiles/setup.sh

# zsh
- name: change default shell
  user: name={{ wheel_user_name }} shell=/bin/zsh
  become: yes

# ruby
- name: remove yum ruby
  yum: name=ruby state=absent
  become: yes

- name: check ruby installed
  shell: /home/{{ wheel_user_name }}/.rbenv/bin/rbenv versions | grep {{ ruby_version }}
  register: ruby_installed_check
  failed_when: ruby_installed_check.rc not in [0, 1]

- name: install ruby
  shell: /home/{{ wheel_user_name }}/.rbenv/bin/rbenv install {{ ruby_version }}
  when: ruby_installed_check.rc == 1

- name: check default ruby version
  shell: /home/{{ wheel_user_name }}/.rbenv/bin/rbenv version | grep {{ ruby_version }}
  register: ruby_version_check
  failed_when: ruby_version_check.rc not in [0, 1]

- name: set default ruby version
  shell: /home/{{ wheel_user_name }}/.rbenv/bin/rbenv global {{ ruby_version }}
  when: ruby_version_check.rc == 1

- name: update gems and install bundler
  shell: /home/{{ wheel_user_name }}/.rbenv/bin/rbenv exec gem update --system && /home/{{ wheel_user_name }}/.rbenv/bin/rbenv exec gem install bundler --no-ri --no-rdoc && /home/{{ wheel_user_name }}/.rbenv/bin/rbenv rehash

